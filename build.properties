# Property files contain key/value pairs
# 
#---------------------------------------------------------------------
# WordPress Install stuff
#---------------------------------------------------------------------

#Full path directory where you want to install WordPress
#Required 
build.dir.wp=D:/Sites/Bar

#The database name you want to create or are using.
#Required 
build.db.name=example_bar

#This is your actual working URL based on your own config/hosts file (http://localhost or ..)
#If you mess this up it will still install WP but you will have to fix it in the database.
#This example is the same as above only for organization.
#Recommended you change this each new install
build.dir.actual=http://dev.local/Bar

#Database info
#This will also be entered into the wp-config.php.
#Errors handled by PDO

build.db.url= mysql:host=localhost;    
build.db.userid= root
build.db.password=
build.db.wp.host= localhost

#Login info - this is normally set during WordPress install

build.wp.title = site title
build.wp.user = admin
build.wp.password = admin
build.wp.email = email@example.com

#Zip file location of wordpress download
build.download.wp.url=http://wordpress.org/latest.tar.gz
#Nightly
#build.download.wp.url=http://wordpress.org/nightly-builds/wordpress-latest.zip

#Comma delimited list of zip downloads of WordPress Plugins (optional)
#build.download.plugin.urls=http://downloads.wordpress.org/plugin/debug-bar.0.8.zip,http://downloads.wordpress.org/plugin/wordpress-seo.1.2.8.4.zip

#Comma delimited list of zip downloads of wordpress Themes (optional)
#build.download.themes.urls=http://wordpress.org/extend/themes/download/toolbox.1.4.zip

#Set the db prefix for wp-config.php
build.wp.config.db.prefix=wp_

#Enable WP_DEBUG in wp-config.php
build.wp.config.debug=true

#Enable SAVEQUERIES in wp-config.php 
build.wp.config.savequeries=true

#insert contents of a file into wp-config.php; file must live in same directory as build/props (ie - custom user tables, define statements, etc)
#build.wp.config.append.filename=

#---------------------------------------------------------------------------
# WordPress Move Stuff
#---------------------------------------------------------------------------

# MySQL Database Dump
# 
build.wp.db.dump.host=localhost
build.wp.db.dump.username=root
build.wp.db.dump.pass=root
build.wp.db.dump.name=yep
build.wp.db.dump.send=D:\${build.wp.db.dump.name}-${DSTAMP}.sql

# FTP
# 
ftp.source=${build.dir.wp}
ftp.host=ftp.example.com
ftp.port=21
ftp.username=username
ftp.password=password
ftp.dir=/public_html/example

#---------------------------------------------------------------------------
# WordPress Report Stuff
#---------------------------------------------------------------------------

#----------------
#Base for all reports for some reason it's named sniff
#Change this to your theme/plugin or whatever you want to run report on
#
build.wp.sniff.dir=${build.dir.wp}\wp-content\themes\twentythirteen

# change output dir if needed
build.wp.sniff.dir.output=${build.wp.sniff.dir}\reports
build.wp.sniff.dir.output.temp=${build.wp.sniff.dir.output}\temp
build.wp.sniff.dir.output.xml=${build.wp.sniff.dir.output}\xml
#don't change this
build.wp.sniff.input =${build.wp.sniff.dir}
build.wp.sniff.output=${build.wp.sniff.dir.output}
build.wp.sniff.output.xml=${build.wp.sniff.output}\${build.wp.sniff.xml.file}
build.wp.sniff.output.temp=${build.wp.sniff.dir.output.temp}
#----------------


#----------------
# PHP Documentor 2 -  http://www.phpdoc.org/
# 
build.wp.docs.dir = ${build.wp.sniff.dir}
# Name your Docs
build.wp.docs.name = all wordpress
# The output directory
build.wp.doc.output = ${build.wp.sniff.output}\docs
#----------------

#----------------
# PhpMess - https://github.com/phpmd/phpmd 
# 
build.wp.mess.html.file=PhpMess-${TODAY}.html
#----------------

#----------------
# CopyPaste Detector - https://github.com/phpmd/phpmd 
# 
build.wp.copypaste.xml.file=CopyPaste-${TODAY}.xml
#converting to HTML doesn't work :(
#build.wp.copypaste.html.file=CopyPaste.html
#build.wp.sniff.copypaste.style=.\assets\Copy-Paste-Detector\pmd-html.xsl
#----------------

#----------------
# #PhpCodeSniffer
# 
# This is set to WordPress by default you need this in your PEAR CodeSniffer folder
# https://github.com/mrchrisadams/WordPress-Coding-Standards

build.wp.sniff.xml.file=Codesniff-${TODAY}.xml
build.wp.sniff.html.file=Codesniff-${TODAY}.html
#style and css 
build.wp.sniff.style=.\assets\CodeSniffer\PHP-Codesniffer.xsl
#----------------

#---------------------------------------------------------------------------
# WordPress Misc Stuff
#---------------------------------------------------------------------------

#---------------
# Tarballs
# 
# Name - this is set to the blog title + time stamp by default
build.wp.tarball.name = ${build.wp.title}-${TODAY}
#Tarball dir you want to package , this is set to the build dir by default
build.wp.tarball.location = ${build.dir.wp}
#Where are we sending the tarball? this is set to the build dir by default
build.wp.tarball.send = ${build.dir.wp}
#--------------

#--------------
# JsMin
# 
# Minifying js is build into phing
#directory with your js files in it
build.wp.jsmin.dir = ${build.dir.wp}\wp-content\themes\twentyeleven\js
#output will go in here with -min suffix
build.wp.jsm.output = ${build.dir.wp}\wp-content\themes\twentyeleven\js\min
#--------------


#--------------
#Timestamps
#
build.dt.buildformat = %a, %d %b %Y, %H:%M
build.dt.fileformat = %Y-%m-%d-%H-%M
#--------------